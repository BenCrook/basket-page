{"version":3,"sources":["components/product-grid/product-row.module.css","components/totals/totals.module.css","components/product-grid/product-grid.module.css","components/progress-steps/progress-steps.module.css","components/price/price.module.css","app.module.css","images/products/product-img-1.png","images/products/product-img-2.png","data/index.tsx","components/price/Price.tsx","components/messages/Message.tsx","components/product-grid/QuantityMessages.tsx","components/product-grid/ProductRow.tsx","components/product-grid/ProductGrid.tsx","components/progress-steps/ProgressSteps.tsx","components/totals/Totals.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","row","column","product","price","quantity","mobileQuantity","subtotal","image","mobilePrice","name","inStock","quantityWrapper","quantityInput","quantityIcon","remove","totals","vat","total","header","stepContainer","step","icon","isActive","title","specialPrice","oldPrice","continue","__webpack_require__","p","initialBasket","max","qty","qtyInBag","sku","images","img1","img2","Price","props","react_default","a","createElement","className","styles","toFixed","Message","content","QuantityMessaging","messages_Message","concat","ProductRow","productPrice","QuantityEditor","Fragment","onClick","updateQty","type","value","readOnly","removeItem","src","alt","price_Price","QuantityMessages","ProductGrid","actionType","updatedBasket","basket","map","loopedProduct","skusMatch","canIncrement","canDecrement","updateBasket","filter","product_grid_ProductRow","key","steps","active","complete","ProgressSteps","index","activeClass","transformNumberForLocale","numberToTransform","toLocaleString","undefined","minimumFractionDigits","Totals","tax","App","_useState","useState","_useState2","Object","slicedToArray","basketIsPopulated","length","emptyBasket","populatedBasket","product_grid_ProductGrid","totals_Totals","disabled","console","log","successfulCheckout","progress_steps_ProgressSteps","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52b7dab5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"product-row_row__1mile\",\"column\":\"product-row_column__3xMwP\",\"product\":\"product-row_product__3QEnY\",\"price\":\"product-row_price__6ek5F\",\"quantity\":\"product-row_quantity__2LWh9\",\"mobileQuantity\":\"product-row_mobileQuantity__3IBOs\",\"subtotal\":\"product-row_subtotal__2-giX\",\"image\":\"product-row_image__k-PDt\",\"mobilePrice\":\"product-row_mobilePrice__lrnaL\",\"name\":\"product-row_name__1sRUM\",\"inStock\":\"product-row_inStock__13tTu\",\"quantityWrapper\":\"product-row_quantityWrapper__3emWD\",\"quantityInput\":\"product-row_quantityInput__3Y4J5\",\"quantityIcon\":\"product-row_quantityIcon__m-Igu\",\"remove\":\"product-row_remove__15Dvh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"totals\":\"totals_totals__2iWaB\",\"row\":\"totals_row__IJPBQ\",\"subtotal\":\"totals_subtotal__3SMEH\",\"vat\":\"totals_vat__3lKI5\",\"total\":\"totals_total__1yoWY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"product-grid_header__3Ujom\",\"product\":\"product-grid_product__1uPD0\",\"price\":\"product-grid_price__uiYZy\",\"quantity\":\"product-grid_quantity__3jjs8\",\"subtotal\":\"product-grid_subtotal__P8ap7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stepContainer\":\"progress-steps_stepContainer__1TRQU\",\"step\":\"progress-steps_step__m8Q67\",\"icon\":\"progress-steps_icon__yMxJQ\",\"isActive\":\"progress-steps_isActive__1_wcW\",\"title\":\"progress-steps_title__blhgY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"specialPrice\":\"price_specialPrice__3qNLv\",\"oldPrice\":\"price_oldPrice__1ReKt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"continue\":\"app_continue__2dI9c\",\"totals\":\"app_totals__3hfhO\",\"total\":\"app_total__3dV55\"};","module.exports = __webpack_public_path__ + \"static/media/product-img-1.54982bec.png\";","module.exports = __webpack_public_path__ + \"static/media/product-img-2.529744d7.png\";","import { BasketContentsInterface } from '../types'\nimport img1 from '../images/products/product-img-1.png';\nimport img2 from '../images/products/product-img-2.png';\n\nexport const currencySymbol: string = '\\u00A3'; // £\nexport const taxRate: number = 0.2; // 20%\n\nexport const initialBasket: BasketContentsInterface[] = [\n    {\n        max: 10,\n        name: \"Oversized grandpa's cool jumper in brown and red\",\n        price: 1878.00,\n        qty: 15,\n        qtyInBag: 1,\n        specialPrice: null,\n        sku: 123,\n        images: [\n            img1\n        ]\n    },\n    {\n        max: 10,\n        name: \"Merry Christmas jumper in bright blue\" ,\n        price: 39.00,\n        qty: 42,\n        qtyInBag: 2,\n        specialPrice: 34.00,\n        sku: 321,\n        images: [\n            img2\n        ]\n    }\n];\n","import React from 'react';\nimport { PriceInterface } from '../../types';\nimport styles from './price.module.css';\nimport { currencySymbol } from '../../data';\n\n/**\n * Price component, responsible for rendering product prices.\n * Will use specialPrice if set, else it will use the standard price.\n * @param props\n * @constructor\n */\nconst Price = (props: PriceInterface) => {\n    return (\n        <div>\n            <div className={props.specialPrice ? styles.oldPrice : ''}>\n                {currencySymbol + props.price.toFixed(2)}\n            </div>\n\n            {props.specialPrice ? (\n                <div className={styles.specialPrice}>\n                    {currencySymbol + props.specialPrice.toFixed(2)}\n                </div>\n            ) : null}\n        </div>\n    )\n};\n\nexport default Price;","import React from 'react';\n\ninterface PropsInterface {\n    content: string\n}\n\n/**\n * Message component, responsible for rendering message such as error, warning, info etc.\n * @param props\n * @constructor\n */\nconst Message = (props: PropsInterface) => {\n    return (\n        <div>\n            {props.content}\n        </div>\n    )\n};\n\nexport default Message;","import React from 'react';\nimport Message from '../messages/Message';\n\ninterface PropsInterface {\n    qtyInBag: number,\n    max: number\n}\n\n/**\n * Displays a message if the quantity is set above the max.\n * @param props\n * @constructor\n */\nconst QuantityMessaging = (props: PropsInterface) => {\n    const {qtyInBag, max} = props;\n\n    if (qtyInBag >= max) {\n        return (\n            <Message content={`A maximum of ${max} can be purchased`} />\n        )\n    }\n\n    return null;\n};\n\nexport default QuantityMessaging;\n","import React from 'react';\nimport Price from '../price/Price';\nimport QuantityMessaging from './QuantityMessages';\nimport {currencySymbol} from '../../data';\nimport {BasketContentsInterface} from '../../types';\nimport styles from './product-row.module.css';\n\ninterface PropsInterface {\n    product: BasketContentsInterface,\n    updateQty: Function,\n    removeItem: Function\n}\n\n/**\n * A table row to be rendered inside the ProductGrid component.\n * @param props\n * @constructor\n */\nconst ProductRow = (props: PropsInterface) => {\n    const product = props.product;\n    const productPrice = product.specialPrice ? product.specialPrice : product.price;\n\n    const QuantityEditor = () => {\n        return (\n            <>\n                <div className={styles.quantityWrapper}>\n                    <span className={styles.quantityIcon} onClick={() => props.updateQty('DECREMENT', product)}>–</span>\n                    <input className={styles.quantityInput} type=\"text\" value={product.qtyInBag} readOnly/>\n                    <span className={styles.quantityIcon} onClick={() => props.updateQty('INCREMENT', product)}>+</span>\n                </div>\n                <div className={styles.remove} onClick={() => props.removeItem(product.sku)}>Remove</div>\n            </>\n        )\n    };\n\n    return (\n        <div className={styles.row}>\n            <div className={`${styles.column} ${styles.product}`}>\n                <div className={styles.image}>\n                    <img src={product.images[0]} alt={product.name}/>\n                </div>\n                <div>\n                    <div className={styles.name}>{product.name}</div>\n                    <div className={styles.mobilePrice}>\n                        <Price price={product.price} specialPrice={product.specialPrice}/>\n                    </div>\n                    <div className={styles.inStock}>{product.qty ? 'In Stock' : 'Out of stock'}</div>\n                </div>\n                <div className={styles.mobileQuantity}>\n                    <QuantityEditor/>\n                </div>\n            </div>\n\n            <div className={`${styles.column} ${styles.price}`}>\n                <Price price={product.price} specialPrice={product.specialPrice}/>\n            </div>\n\n            <div className={`${styles.column} ${styles.quantity}`}>\n                <QuantityEditor/>\n                <QuantityMessaging qtyInBag={product.qtyInBag} max={product.max}/>\n            </div>\n\n            <div className={`${styles.column} ${styles.subtotal}`}>\n                {currencySymbol + (productPrice * product.qtyInBag).toFixed(2)}\n            </div>\n        </div>\n    )\n};\n\nexport default ProductRow;\n","import React from 'react';\nimport { BasketContentsInterface } from '../../types';\nimport ProductRow from './ProductRow';\nimport styles from './product-grid.module.css';\n\ninterface PropsInterface {\n    basket: BasketContentsInterface[]\n    updateBasket: Function\n}\n\n/**\n * Product grid, responsible for rendering products in a table. Typically used in basket page and checkout.\n * todo: Lift updateQty functions up into App.js and consider using a reducer hook (useReducer)\n * @param props\n * @constructor\n */\nconst ProductGrid = (props: PropsInterface) => {\n    /**\n     * Updates the quantity based on the specified action.\n     * @param actionType\n     * @param product\n     */\n    const updateQty = (actionType: string, product: BasketContentsInterface) => {\n        const updatedBasket = props.basket.map((loopedProduct) => {\n            const skusMatch = loopedProduct.sku === product.sku;\n            const qtyInBag = loopedProduct.qtyInBag;\n            const canIncrement = qtyInBag < product.max;\n            const canDecrement = qtyInBag > 1;\n\n            if (skusMatch) {\n                if (actionType === 'INCREMENT' && canIncrement) {\n                    loopedProduct.qtyInBag = qtyInBag + 1;\n                } else if (actionType === 'DECREMENT' && canDecrement) {\n                    loopedProduct.qtyInBag = qtyInBag - 1;\n                }\n            }\n            return loopedProduct;\n        });\n\n        props.updateBasket(updatedBasket);\n    };\n\n    /**\n     * Removes an item from the basket, uses filter to avoid directly editing state.\n     * @param sku\n     */\n    const removeItem = (sku: number) => {\n        const updatedBasket = props.basket.filter((product) => {\n            if (product.sku !== sku) {\n                return true;\n            }\n        });\n\n        props.updateBasket(updatedBasket);\n    };\n\n    return (\n        <div>\n            <div className={styles.header}>\n                <div className={styles.product}>Product</div>\n                <div className={styles.price}>Price</div>\n                <div className={styles.quantity}>Quantity</div>\n                <div className={styles.subtotal}>Subtotal</div>\n            </div>\n            <div className=\"content\">\n                {props.basket.map((product) => {\n                    return <ProductRow key={product.sku} product={product} updateQty={updateQty} removeItem={removeItem}/>\n                })}\n            </div>\n        </div>\n    )\n};\n\nexport default ProductGrid;","import React from 'react';\nimport styles from './progress-steps.module.css';\nimport { StepsInterface } from '../../types';\n\nconst steps: StepsInterface[] = [\n    {\n        active: true,\n        complete: false,\n        title: 'My Basket'\n    },\n    {\n        active: false,\n        complete: false,\n        title: 'Delivery'\n    },\n    {\n        active: false,\n        complete: false,\n        title: 'Payment'\n    }\n];\n\n/**\n * Responsible for rendering the progress steps.\n * It has been split into a separate function to keep the markup clean.\n */\nconst renderSteps = () => {\n    return steps.map((step, index) => {\n        const activeClass = step.active ? styles.isActive : '';\n\n        return (\n            <div key={step.title} className={`${styles.step} ${activeClass}`}>\n                <div className={styles.icon}>{index + 1}</div>\n                <div className={styles.title}>{step.title}</div>\n            </div>\n        )\n    })\n};\n\nconst ProgressSteps = () => {\n    return (\n        <div className={styles.stepContainer}>\n            {renderSteps()}\n        </div>\n    )\n};\n\nexport default ProgressSteps;\n","import React from 'react';\nimport { BasketContentsInterface } from '../../types';\nimport { currencySymbol, taxRate } from '../../data';\nimport styles from './totals.module.css';\n\ninterface PropsInterface {\n    basket: BasketContentsInterface[]\n}\n\n/**\n * Transform a number to use the local formatting system e.g 1000 -> 1,000.\n * @param numberToTransform\n */\nconst transformNumberForLocale = (numberToTransform: number) => {\n    return numberToTransform.toLocaleString(undefined, { minimumFractionDigits: 2 })\n};\n\n/**\n * Responsible for rendering totals, displays subtotal, tax, and grand total.\n * @param props\n * @constructor\n */\nconst Totals = (props: PropsInterface) => {\n    let subtotal = 0;\n\n    props.basket.map((product) => {\n        const productPrice = product.specialPrice ? product.specialPrice : product.price;\n        subtotal = subtotal + (productPrice * product.qtyInBag);\n    });\n\n    const tax = subtotal * taxRate;\n    const total = subtotal + tax;\n\n    return (\n        <div className={styles.totals}>\n            <div className={`${styles.row} ${styles.subtotal}`}>\n                <span>Subtotal</span>\n                <span>{currencySymbol + transformNumberForLocale(subtotal)}</span>\n            </div>\n            <div className={`${styles.row} ${styles.vat}`}>\n                <span>VAT</span>\n                <span>{currencySymbol + transformNumberForLocale(tax)}</span>\n            </div>\n            <div className={styles.row}>\n                <span>Total excluding delivery</span>\n                <span className={styles.total}>{currencySymbol + transformNumberForLocale(total)}</span>\n            </div>\n        </div>\n    )\n};\n\nexport default Totals;\n","import React, {useState} from 'react';\nimport ProductGrid from './components/product-grid/ProductGrid';\nimport ProgressSteps from './components/progress-steps/ProgressSteps';\nimport {initialBasket} from './data';\nimport Totals from './components/totals/Totals';\nimport {BasketContentsInterface} from './types';\nimport styles from './app.module.css';\n\nconst successfulCheckout = (basket: BasketContentsInterface[]) => {\n    console.log(basket);\n    console.log('You have successfully checked out!');\n};\n\n// todo: Reduce width of the page title as it's overlapping other elements\nconst App = () => {\n    const [basket, updateBasket] = useState(initialBasket);\n    const basketIsPopulated = basket.length;\n    const emptyBasket = <div>Your basket is empty.</div>;\n    const populatedBasket = (\n        <>\n            <ProductGrid basket={basket} updateBasket={updateBasket}/>\n            <div>\n                <button className={styles.continue}>Continue Shopping</button>\n                <span className={styles.totals}>\n                    <Totals basket={basket}/>\n                    <button className=\"primary large\"\n                            disabled={!basket.length}\n                            onClick={() => successfulCheckout(basket)}>\n                        Checkout Securely\n                    </button>\n                </span>\n            </div>\n        </>\n    );\n\n    return (\n        <div className=\"container\">\n            <ProgressSteps/>\n            <h1 className=\"page-title\">My Basket</h1>\n            {basketIsPopulated ? populatedBasket : emptyBasket}\n        </div>\n    )\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './global-styling/variables.css';\nimport './global-styling/global.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}